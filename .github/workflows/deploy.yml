name: Deploy to Home Server

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push MCP Server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.mcp
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-mcp:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-mcp:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-mcp:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-mcp:buildcache,mode=max

      - name: Build and push Streamlit image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-streamlit:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-streamlit:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-streamlit:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-streamlit:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Home Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}

            cat > .env << 'EOF'
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            EOF

            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-mcp:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bigcontest2025-streamlit:latest

            docker compose down
            docker compose up -d
            docker image prune -f

            echo "Deployment completed successfully!"
