# 빌드 스테이지
FROM python:3.11-slim AS builder

# uv 설치
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

WORKDIR /app

# 시스템 의존성 설치 (FAISS 및 sentence-transformers용)
RUN apt-get update && apt-get install -y \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# 의존성 파일만 먼저 복사
COPY pyproject.toml uv.lock* ./

# 의존성 설치
RUN uv sync --frozen --no-dev --no-cache || uv sync --no-dev --no-cache

# 런타임 스테이지
FROM python:3.11-slim

WORKDIR /app

# 빌드 스테이지에서 가상환경 복사
COPY --from=builder /app/.venv /app/.venv

# MCP 서버 코드 복사
COPY mcp_server/ /app/mcp_server/

# 벡터 스토어 및 데이터 디렉토리 생성
RUN mkdir -p /app/vector_store /app/data

# PATH에 가상환경 추가
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1

# 포트 노출
EXPOSE 8000

# MCP 서버 실행
CMD ["python", "-m", "uvicorn", "mcp_server.main:app", "--host", "0.0.0.0", "--port", "8000"]
